; This file was autmatically compiled by Uzh lang compiler
; register bx is used for pointing to begin of local vars
; register cx is used for temporary using of var address
; register dx is used for returning values from func

jmp :main


:fact
; starting if 0
; getting var n
    push bx
    push 0
    add
    pop cx
    push [cx]
push 1
great
   push 0
    je :false_branch_if_0
; true branch of if

; Calcing params
; getting var n
    push bx
    push 0
    add
    pop cx
    push [cx]
push 1
sub
; calling function 
    push bx
    push 1
    add    
    pop bx
  push bx
  push 0
  add
  pop cx
  pop [cx]
call :fact
push dx

    push bx
    push -1
    add    
    pop bx
; getting var x
    push bx
    push 1
    add
    pop cx
    pop [cx]
; getting var x
    push bx
    push 1
    add
    pop cx
    push [cx]
; getting var n
    push bx
    push 0
    add
    pop cx
    push [cx]
mul
    pop dx
    ret
    jmp :end_of_if_0
    :false_branch_if_0
push 1
    pop dx
    ret
    :end_of_if_0

:main
in
; getting var n
    push bx
    push 0
    add
    pop cx
    pop [cx]

; Calcing params
; getting var n
    push bx
    push 0
    add
    pop cx
    push [cx]
; calling function 
    push bx
    push 1
    add    
    pop bx
  push bx
  push 0
  add
  pop cx
  pop [cx]
call :fact
push dx

    push bx
    push -1
    add    
    pop bx
out
